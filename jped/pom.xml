<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>jped</artifactId>
	<packaging>jar</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>pedigree-based filter VCF file </description>
	<url>http://charite.github.io/jannovar/</url>

	<parent>
		<groupId>de.charite.compbio</groupId>
		<artifactId>jannovar-tutorials</artifactId>
		<version>0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<!-- Jannovar framework -->
		<dependency>
			<groupId>de.charite.compbio</groupId>
			<artifactId>jannovar-core</artifactId>
			<version>0.14</version>
		</dependency>
		<dependency>
			<groupId>de.charite.compbio</groupId>
			<artifactId>jannovar-htsjdk</artifactId>
			<version>0.14</version>
		</dependency>

		<!-- commons-cli used for parsing the command line -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>

		<!--Logging framework -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.7</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!--Use filtering so that maven will replace placeholders with values 
					from the pom e.g. ${project.version} -->
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<!-- Make an executable jar and specify the main class and classpath -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<!-- set useUniqueVersions=false in order that the classpath has the 
								SNAPSHOT instead of the build number prefixed to the dependency -->
							<useUniqueVersions>false</useUniqueVersions>
							<mainClass>jped.JPed</mainClass>
						</manifest>
					</archive>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<!-- More JAR building -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>de.charite.compbio.jannovar.JannovarFilterApp</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Specify the resources which need to be made accessible to the user -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/resources</outputDirectory>
							<resources>
								<resource>
									<directory>src/resources</directory>
									<!--Use filtering so that maven will replace placeholders with values 
										from the pom e.g. ${project.version} -->
									<filtering>true</filtering>
									<includes>
										<include>application.properties</include>
										<include>example.settings</include>
										<include>test.settings</include>
										<include>log4j2.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
